<Project>
  <Import Sdk="Microsoft.NET.Sdk" Project="Sdk.targets" Condition=" '$(RebelSdkImportsMicrosoftNetSdk)' == 'true' " />

  <PropertyGroup>
    <!--
    Define constant to determine whether the real_t type in Rebel is double precision or not.
    By default this is false, like the official Rebel builds. If someone is using a custom
    Rebel build where real_t is double, they can override the RebelRealTIsDouble property.
    -->
    <DefineConstants Condition=" '$(RebelRealTIsDouble)' == 'true' ">REBEL_REAL_T_IS_DOUBLE;$(DefineConstants)</DefineConstants>
  </PropertyGroup>

  <!-- Backported from newer Microsoft.NET.Sdk version -->
  <Target Name="RebelIncludeTargetingPackReference" BeforeTargets="_GetRestoreSettingsPerFramework;_CheckForInvalidConfigurationAndPlatform"
          Condition=" '$(RebelUseNETFrameworkRefAssemblies)' == 'true' and '$(TargetFrameworkMoniker)' != '' and '$(TargetFrameworkIdentifier)' == '.NETFramework' and '$(AutomaticallyUseReferenceAssemblyPackages)' == 'true' ">
    <GetReferenceAssemblyPaths
        TargetFrameworkMoniker="$(TargetFrameworkMoniker)"
        RootPath="$(TargetFrameworkRootPath)"
        TargetFrameworkFallbackSearchPaths="$(TargetFrameworkFallbackSearchPaths)"
        BypassFrameworkInstallChecks="$(BypassFrameworkInstallChecks)"
        SuppressNotFoundError="true">
      <Output TaskParameter="FullFrameworkReferenceAssemblyPaths" PropertyName="_FullFrameworkReferenceAssemblyPaths"/>
    </GetReferenceAssemblyPaths>

    <ItemGroup>
      <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" Version="$(MicrosoftNETFrameworkReferenceAssembliesLatestPackageVersion)" IsImplicitlyDefined="true" Condition="'$(_FullFrameworkReferenceAssemblyPaths)' == ''"/>
    </ItemGroup>
  </Target>
</Project>
